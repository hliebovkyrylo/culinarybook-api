generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  email            String @unique
  username         String @unique
  name             String
  image            String
  isVerified       Boolean
  canResetPassword Boolean
  password         String
  vereficationCode VerificationCode[]
  follow           Follow[]
  recipe           Recipe[]
  like             Like[]
  Visited          Visited[]
  Saved            Saved[]
}

model VerificationCode {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  code       String
  expiryTime Int
  userId     String @db.ObjectId @unique
  user       User   @relation(fields: [userId], references: [id])
}

model Follow {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  userId     String @db.ObjectId
  followerId String @db.ObjectId
  follower   User   @relation(fields: [followerId], references: [id])
}

model Recipe {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  ownerId      String @db.ObjectId
  title        String
  image        String
  coockingTime String
  complexity   String
  typeOfFood   String
  ingradients  String
  isPublic     Boolean
  owner        User @relation(fields: [ownerId], references: [id])
  like         Like[]
  Visited      Visited[]
  Saved        Saved[]
  Step         Step[]
  Comment      Comment[]
}

model Like {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  userId   String @db.ObjectId
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
}

model Visited {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  userId   String @db.ObjectId
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
}

model Saved {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  userId   String @db.ObjectId
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
}

model Step {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId        String @db.ObjectId
  stepNumber      Int
  stepDescription String
  recipe          Recipe @relation(fields: [recipeId], references: [id])
}

model Comment {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId       String @db.ObjectId
  authorUsername String
  authorImage    String
  commentText    String
  grade          Int
  recipe         Recipe @relation(fields: [recipeId], references: [id])
}